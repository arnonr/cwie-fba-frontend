
npx sequelize migration:generate --name groups

npx sequelize db:migrate

npx sequelize-cli db:seed --seed update-feature.js


docker compose up -d


docker logs -f a18

git reset --hard
git pull

clear log docker server
truncate -s 0 /var/lib/docker/containers/*/*-json.log

clear log docker mac os
echo "rm /var/lib/docker/containers/*/*.log" | nc -U -w 0 ~/Library/Containers/com.docker.docker/Data/debug-shell.sock

ถ้าไฟล์ไหนไม่ยอม ignore
git rm --cached [file]


debug
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Docker: Attach to Node",
            "type": "node",
            "request": "attach",
            "restart": true,
            "port": 9229,
            "address": "localhost",
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "/app",
            "protocol": "inspector"
          }
    ]



docker exec 851 /usr/bin/mysql -u root --password=2022@aidm aidm > backup1.sql

crontab
apt-get install cron
sudo crontab -e

*/1 * * * * /usr/bin/php /home/user/public_html/cronrun.php
*/1 * * * * sudo docker exec 1b2 /usr/bin/mysqldump -u edocument --password="Z010(A1[b2bUx0Kl" edocument > "/var/www/html/edocument/backupDB/backup-"`date +\%Y\%m\%d\%M`.sql

* * * * * command to be executed
- - - - -
| | | | |
| | | | ----- Day of week (0 - 7) (Sunday=0 or 7)
| | | ------- Month (1 - 12)
| | --------- Day of month (1 - 31)
| ----------- Hour (0 - 23)
------------- Minute (0 - 59)

sudo service cron restart

grep CRON /var/log/syslog

